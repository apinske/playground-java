name: build
on:
  push:
    branches: [ master ]
jobs:
  build_maven:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Cache Maven Repo
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Cache Node
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: Build with Maven
      run: mvn -B spring-boot:build-image --file pom.xml -Dspring-boot.build-image.docker.publishRegistry.username=${{ secrets.DOCKERHUB_USERNAME }} -Dspring-boot.build-image.docker.publishRegistry.password=${{ secrets.DOCKERHUB_TOKEN }} -Dspring-boot.build-image.imageName=apinske/playground-java -Dspring-boot.build-image.publish=true
    - name: Deploy with Maven
      run: mvn -B deploy --file pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build_gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
    - name: Cache Node
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: Build with Gradle
      run: gradle -b build.gradle build
    - name: Cleanup Gradle Cache
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
